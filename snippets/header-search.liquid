{% comment %}
  Header Search Component
  Renders search functionality in different styles
  
  Parameters:
  - search_style: string - Search display style ('icon', 'modal', 'visible')
  - search_position: string - Position in header ('left', 'center', 'right')
  - placeholder: string - Search input placeholder text
{% endcomment %}

{%- liquid
  assign style = search_style | default: 'icon'
  assign position = search_position | default: 'right'
  assign search_placeholder = placeholder | default: 'Search products...'
-%}

<div class="header__search header__search--{{ style }} header__search--{{ position }}" 
     data-search-component>
  
  {% if style == 'visible' %}
    <!-- Always Visible Search Bar -->
    <form action="{{ routes.search_url }}" 
          method="get" 
          class="search-form search-form--visible"
          role="search">
      <div class="search-input-wrapper">
        <input type="search"
               name="q"
               class="search-input"
               placeholder="{{ search_placeholder }}"
               value="{{ search.terms | escape }}"
               aria-label="{{ 'search.placeholder' | t }}"
               autocomplete="off"
               autocorrect="off"
               autocapitalize="off">
        <button type="submit" 
                class="search-submit"
                aria-label="{{ 'search.submit' | t }}">
          <svg width="18" height="18" viewBox="0 0 18 18" fill="none">
            <circle cx="8.5" cy="8.5" r="6" stroke="currentColor" stroke-width="1.5"/>
            <path d="m16 16-4.35-4.35" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"/>
          </svg>
        </button>
      </div>
    </form>
    
  {% else %}
    <!-- Search Icon (opens modal or goes to search page) -->
    <a href="{% if style == 'modal' %}#{% else %}{{ routes.search_url }}{% endif %}" 
       class="search-trigger"
       aria-label="{{ 'search.title' | t }}"
       {% if style == 'modal' %}data-search-modal-trigger{% endif %}>
      <svg width="20" height="20" viewBox="0 0 20 20" fill="none">
        <circle cx="9.5" cy="9.5" r="6.5" stroke="currentColor" stroke-width="1.5"/>
        <path d="m18 18-4.35-4.35" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"/>
      </svg>
      <span class="visually-hidden">{{ 'search.title' | t }}</span>
    </a>
  {% endif %}
</div>

{% if style == 'modal' %}
  <!-- Search Modal Overlay -->
  <div class="search-modal-overlay" data-search-modal aria-hidden="true">
    <div class="search-modal" role="dialog" aria-labelledby="search-modal-title">
      <div class="search-modal__header">
        <h2 id="search-modal-title" class="search-modal__title">{{ 'search.title' | t }}</h2>
        <button type="button" 
                class="search-modal__close"
                aria-label="Close search"
                data-search-modal-close>
          <svg width="20" height="20" viewBox="0 0 20 20" fill="none">
            <path d="M15 5L5 15M5 5l10 10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"/>
          </svg>
        </button>
      </div>
      
      <form action="{{ routes.search_url }}" 
            method="get" 
            class="search-form search-form--modal"
            role="search">
        <div class="search-input-wrapper search-input-wrapper--large">
          <input type="search"
                 name="q"
                 class="search-input search-input--large"
                 placeholder="{{ search_placeholder }}"
                 value="{{ search.terms | escape }}"
                 aria-label="{{ 'search.placeholder' | t }}"
                 autocomplete="off"
                 autocorrect="off"
                 autocapitalize="off"
                 data-search-input>
          <button type="submit" 
                  class="search-submit search-submit--large"
                  aria-label="{{ 'search.submit' | t }}">
            <svg width="20" height="20" viewBox="0 0 20 20" fill="none">
              <circle cx="9.5" cy="9.5" r="6.5" stroke="currentColor" stroke-width="1.5"/>
              <path d="m18 18-4.35-4.35" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"/>
            </svg>
          </button>
        </div>
      </form>
      
      <div class="search-suggestions" data-search-suggestions>
        <!-- Dynamic search suggestions would go here -->
      </div>
    </div>
  </div>
{% endif %}

<style>
  .header__search {
    position: relative;
  }

  /* Search Trigger (Icon) */
  .search-trigger {
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 8px;
    color: inherit;
    text-decoration: none;
    border-radius: 4px;
    transition: all 0.2s ease;
  }

  .search-trigger:hover {
    color: var(--menu-hover, #007acc);
    background: rgba(0, 0, 0, 0.05);
  }

  .search-trigger:focus {
    outline: 2px solid var(--color-accent, #007acc);
    outline-offset: 2px;
  }

  .search-trigger svg {
    width: var(--icon-size, 20px);
    height: var(--icon-size, 20px);
  }

  /* Visible Search Form */
  .search-form--visible {
    width: 100%;
    max-width: 300px;
  }

  .search-input-wrapper {
    position: relative;
    display: flex;
    align-items: center;
  }

  .search-input {
    width: 100%;
    padding: 8px 40px 8px 12px;
    border: 1px solid var(--header-border, #e5e5e5);
    border-radius: 6px;
    background: var(--header-bg, white);
    color: inherit;
    font-size: 14px;
    transition: border-color 0.2s ease;
  }

  .search-input:focus {
    outline: none;
    border-color: var(--color-accent, #007acc);
    box-shadow: 0 0 0 2px rgba(0, 122, 204, 0.1);
  }

  .search-submit {
    position: absolute;
    right: 4px;
    background: none;
    border: none;
    padding: 6px;
    color: inherit;
    cursor: pointer;
    border-radius: 4px;
    transition: color 0.2s ease;
  }

  .search-submit:hover {
    color: var(--menu-hover, #007acc);
  }

  .search-submit:focus {
    outline: 2px solid var(--color-accent, #007acc);
    outline-offset: 1px;
  }

  /* Search Modal Styles */
  .search-modal-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.6);
    z-index: 9999;
    opacity: 0;
    visibility: hidden;
    transition: all 0.3s ease;
  }

  .search-modal-overlay.is-open {
    opacity: 1;
    visibility: visible;
  }

  .search-modal {
    position: absolute;
    top: 10%;
    left: 50%;
    transform: translateX(-50%);
    width: 90%;
    max-width: 600px;
    background: var(--header-bg, white);
    border-radius: 12px;
    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.2);
    transition: transform 0.3s ease;
  }

  .search-modal-overlay:not(.is-open) .search-modal {
    transform: translateX(-50%) translateY(-20px);
  }

  .search-modal__header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 20px 24px 16px;
    border-bottom: 1px solid var(--header-border, #e5e5e5);
  }

  .search-modal__title {
    margin: 0;
    font-size: 18px;
    font-weight: 600;
    color: inherit;
  }

  .search-modal__close {
    background: none;
    border: none;
    padding: 8px;
    color: inherit;
    cursor: pointer;
    border-radius: 6px;
    transition: background-color 0.2s ease;
  }

  .search-modal__close:hover {
    background: rgba(0, 0, 0, 0.05);
  }

  .search-form--modal {
    padding: 24px;
  }

  .search-input-wrapper--large {
    position: relative;
  }

  .search-input--large {
    width: 100%;
    padding: 16px 60px 16px 20px;
    border: 2px solid var(--header-border, #e5e5e5);
    border-radius: 12px;
    background: var(--header-bg, white);
    color: inherit;
    font-size: 16px;
    transition: border-color 0.2s ease;
  }

  .search-input--large:focus {
    border-color: var(--color-accent, #007acc);
    box-shadow: 0 0 0 3px rgba(0, 122, 204, 0.1);
  }

  .search-submit--large {
    position: absolute;
    right: 8px;
    top: 50%;
    transform: translateY(-50%);
    background: var(--color-accent, #007acc);
    color: white;
    border: none;
    padding: 12px;
    border-radius: 8px;
    cursor: pointer;
    transition: background-color 0.2s ease;
  }

  .search-submit--large:hover {
    background: var(--color-accent-dark, #005fa3);
  }

  .search-suggestions {
    padding: 0 24px 24px;
    max-height: 300px;
    overflow-y: auto;
  }

  /* Accessibility */
  .visually-hidden {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
  }

  /* Mobile Responsive */
  @media (max-width: 768px) {
    .search-form--visible {
      max-width: 200px;
    }

    .search-input {
      font-size: 13px;
      padding: 6px 32px 6px 10px;
    }

    .search-modal {
      top: 5%;
      width: 95%;
    }

    .search-modal__header {
      padding: 16px 20px 12px;
    }

    .search-form--modal {
      padding: 20px;
    }

    .search-input--large {
      padding: 14px 50px 14px 16px;
      font-size: 15px;
    }
  }

  /* High contrast mode */
  @media (prefers-contrast: high) {
    .search-input,
    .search-input--large {
      border-width: 2px;
    }

    .search-modal {
      border: 2px solid var(--header-border, #000);
    }
  }

  /* Reduced motion */
  @media (prefers-reduced-motion: reduce) {
    .search-trigger,
    .search-input,
    .search-submit,
    .search-modal-overlay,
    .search-modal {
      transition: none;
    }
  }

  /* Print styles */
  @media print {
    .header__search {
      display: none;
    }
  }
</style>

<script>
// Search Modal Functionality
document.addEventListener('DOMContentLoaded', function() {
  const searchTriggers = document.querySelectorAll('[data-search-modal-trigger]');
  const searchModal = document.querySelector('[data-search-modal]');
  const searchCloseBtn = document.querySelector('[data-search-modal-close]');
  const searchInput = document.querySelector('[data-search-input]');

  if (!searchModal) return;

  // Open modal
  searchTriggers.forEach(trigger => {
    trigger.addEventListener('click', function(e) {
      e.preventDefault();
      openSearchModal();
    });
  });

  // Close modal
  if (searchCloseBtn) {
    searchCloseBtn.addEventListener('click', closeSearchModal);
  }

  // Close on overlay click
  searchModal.addEventListener('click', function(e) {
    if (e.target === searchModal) {
      closeSearchModal();
    }
  });

  // Close on escape key
  document.addEventListener('keydown', function(e) {
    if (e.key === 'Escape' && searchModal.classList.contains('is-open')) {
      closeSearchModal();
    }
  });

  function openSearchModal() {
    searchModal.classList.add('is-open');
    searchModal.setAttribute('aria-hidden', 'false');
    document.body.classList.add('search-modal-open');
    
    // Focus the search input
    setTimeout(() => {
      if (searchInput) searchInput.focus();
    }, 100);
  }

  function closeSearchModal() {
    searchModal.classList.remove('is-open');
    searchModal.setAttribute('aria-hidden', 'true');
    document.body.classList.remove('search-modal-open');
  }
});
</script>