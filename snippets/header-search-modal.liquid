{% comment %}
  Renders a search modal for the header.
  
  Usage:
  {% render 'header-search-modal' %}
{% endcomment %}

<div 
  class="header-search-modal" 
  id="search-modal" 
  role="dialog" 
  aria-modal="true" 
  aria-label="{{ 'general.search.search' | t }}"
  hidden
>
  <div class="header-search-modal__overlay" data-close-modal></div>
  
  <div class="header-search-modal__content">
    <div class="header-search-modal__header">
      <h2 class="header-search-modal__title">{{ 'general.search.search' | t }}</h2>
      <button 
        class="header-search-modal__close"
        type="button"
        data-close-modal
        aria-label="{{ 'accessibility.close' | t }}"
      >
        <svg class="icon icon-close" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M18 6L6 18M6 6L18 18" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </button>
    </div>
    
    <div class="header-search-modal__form">
      <form action="{{ routes.search_url }}" method="get" role="search" class="search-form">
        <div class="search-form__input-wrapper">
          <input
            class="search-form__input"
            id="search-modal-input"
            type="search"
            name="q"
            value="{{ search.terms | escape }}"
            placeholder="{{ 'general.search.placeholder' | t }}"
            autocomplete="off"
            autocorrect="off"
            autocapitalize="off"
            spellcheck="false"
            aria-label="{{ 'general.search.search' | t }}"
            autofocus
          >
          <button type="submit" class="search-form__submit" aria-label="{{ 'general.search.submit' | t }}">
            <svg class="icon icon-search" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
              <circle cx="11" cy="11" r="8" stroke="currentColor" stroke-width="2"/>
              <path d="m21 21-4.35-4.35" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            </svg>
          </button>
        </div>
      </form>
      
      <div class="search-form__suggestions" id="search-suggestions" hidden>
        <!-- Search suggestions will be populated here via JavaScript -->
      </div>
    </div>
  </div>
</div>

<style>
  .header-search-modal {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 9999;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  
  .header-search-modal[hidden] {
    display: none;
  }
  
  .header-search-modal__overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.5);
    cursor: pointer;
  }
  
  .header-search-modal__content {
    position: relative;
    background: white;
    border-radius: 12px;
    width: 90%;
    max-width: 600px;
    max-height: 80vh;
    overflow: hidden;
    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.15);
  }
  
  .header-search-modal__header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 20px 24px;
    border-bottom: 1px solid #e5e5e5;
  }
  
  .header-search-modal__title {
    margin: 0;
    font-size: 1.25rem;
    font-weight: 600;
  }
  
  .header-search-modal__close {
    background: none;
    border: none;
    padding: 8px;
    cursor: pointer;
    border-radius: 6px;
    transition: background-color 0.2s ease;
  }
  
  .header-search-modal__close:hover {
    background-color: #f5f5f5;
  }
  
  .header-search-modal__close .icon {
    width: 20px;
    height: 20px;
  }
  
  .header-search-modal__form {
    padding: 24px;
  }
  
  .search-form__input-wrapper {
    position: relative;
    display: flex;
    align-items: center;
  }
  
  .search-form__input {
    width: 100%;
    padding: 16px 60px 16px 20px;
    border: 2px solid #e5e5e5;
    border-radius: 50px;
    font-size: 16px;
    outline: none;
    transition: border-color 0.2s ease;
  }
  
  .search-form__input:focus {
    border-color: #007acc;
  }
  
  .search-form__submit {
    position: absolute;
    right: 8px;
    background: #007acc;
    color: white;
    border: none;
    padding: 12px;
    border-radius: 50%;
    cursor: pointer;
    transition: background-color 0.2s ease;
  }
  
  .search-form__submit:hover {
    background-color: #005a99;
  }
  
  .search-form__submit .icon {
    width: 20px;
    height: 20px;
  }
  
  .search-form__suggestions {
    margin-top: 20px;
    border: 1px solid #e5e5e5;
    border-radius: 8px;
    background: white;
    max-height: 300px;
    overflow-y: auto;
  }
  
  @media (max-width: 768px) {
    .header-search-modal__content {
      width: 95%;
      margin: 20px;
    }
    
    .header-search-modal__header {
      padding: 16px 20px;
    }
    
    .header-search-modal__form {
      padding: 20px;
    }
    
    .search-form__input {
      padding: 14px 50px 14px 16px;
      font-size: 16px;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const modal = document.getElementById('search-modal');
    const closeButtons = modal.querySelectorAll('[data-close-modal]');
    const searchInput = document.getElementById('search-modal-input');
    
    // Open modal function
    window.openSearchModal = function() {
      modal.removeAttribute('hidden');
      document.body.style.overflow = 'hidden';
      setTimeout(() => searchInput.focus(), 100);
    };
    
    // Close modal function
    function closeSearchModal() {
      modal.setAttribute('hidden', '');
      document.body.style.overflow = '';
    }
    
    // Close on button click
    closeButtons.forEach(button => {
      button.addEventListener('click', closeSearchModal);
    });
    
    // Close on Escape key
    document.addEventListener('keydown', function(e) {
      if (e.key === 'Escape' && !modal.hasAttribute('hidden')) {
        closeSearchModal();
      }
    });
    
    // Prevent form submission if search is empty
    const searchForm = modal.querySelector('.search-form');
    searchForm.addEventListener('submit', function(e) {
      const query = searchInput.value.trim();
      if (!query) {
        e.preventDefault();
        searchInput.focus();
      }
    });
  });
</script>